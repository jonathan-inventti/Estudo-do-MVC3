//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EntityModel", "MarcaCarro", "Marca", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RentCarEntity.Models.Marca), "Carro", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RentCarEntity.Models.Carro), true)]

#endregion

namespace RentCarEntity.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntityModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntityModelContainer object using the connection string found in the 'EntityModelContainer' section of the application configuration file.
        /// </summary>
        public EntityModelContainer() : base("name=EntityModelContainer", "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(string connectionString) : base(connectionString, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(EntityConnection connection) : base(connection, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Marca> Marcas
        {
            get
            {
                if ((_Marcas == null))
                {
                    _Marcas = base.CreateObjectSet<Marca>("Marcas");
                }
                return _Marcas;
            }
        }
        private ObjectSet<Marca> _Marcas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carro> Carros
        {
            get
            {
                if ((_Carros == null))
                {
                    _Carros = base.CreateObjectSet<Carro>("Carros");
                }
                return _Carros;
            }
        }
        private ObjectSet<Carro> _Carros;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Marcas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarcas(Marca marca)
        {
            base.AddObject("Marcas", marca);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carros EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarros(Carro carro)
        {
            base.AddObject("Carros", carro);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Carro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carro : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carro object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="marcaId">Initial value of the MarcaId property.</param>
        /// <param name="modelo">Initial value of the Modelo property.</param>
        /// <param name="placa">Initial value of the Placa property.</param>
        public static Carro CreateCarro(global::System.Int32 id, global::System.Int32 marcaId, global::System.String modelo, global::System.String placa)
        {
            Carro carro = new Carro();
            carro.Id = id;
            carro.MarcaId = marcaId;
            carro.Modelo = modelo;
            carro.Placa = placa;
            return carro;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarcaId
        {
            get
            {
                return _MarcaId;
            }
            set
            {
                OnMarcaIdChanging(value);
                ReportPropertyChanging("MarcaId");
                _MarcaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarcaId");
                OnMarcaIdChanged();
            }
        }
        private global::System.Int32 _MarcaId;
        partial void OnMarcaIdChanging(global::System.Int32 value);
        partial void OnMarcaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Modelo
        {
            get
            {
                return _Modelo;
            }
            set
            {
                OnModeloChanging(value);
                ReportPropertyChanging("Modelo");
                _Modelo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Modelo");
                OnModeloChanged();
            }
        }
        private global::System.String _Modelo;
        partial void OnModeloChanging(global::System.String value);
        partial void OnModeloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Placa
        {
            get
            {
                return _Placa;
            }
            set
            {
                OnPlacaChanging(value);
                ReportPropertyChanging("Placa");
                _Placa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Placa");
                OnPlacaChanged();
            }
        }
        private global::System.String _Placa;
        partial void OnPlacaChanging(global::System.String value);
        partial void OnPlacaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "MarcaCarro", "Marca")]
        public Marca Marca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marca>("EntityModel.MarcaCarro", "Marca").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marca>("EntityModel.MarcaCarro", "Marca").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marca> MarcaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marca>("EntityModel.MarcaCarro", "Marca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marca>("EntityModel.MarcaCarro", "Marca", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Marca")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Marca : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Marca object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        public static Marca CreateMarca(global::System.Int32 id, global::System.String nome)
        {
            Marca marca = new Marca();
            marca.Id = id;
            marca.Nome = nome;
            return marca;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "MarcaCarro", "Carro")]
        public EntityCollection<Carro> Carros
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carro>("EntityModel.MarcaCarro", "Carro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carro>("EntityModel.MarcaCarro", "Carro", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
